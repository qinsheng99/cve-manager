package repositoryimpl

import (
	"github.com/opensourceways/cve-manager/common/infrastructure/postgres"
	"github.com/opensourceways/cve-manager/cve/domain"
	"github.com/opensourceways/cve-manager/cve/domain/repository"
)

type communityPkgImpl struct {
	appPkgDB  dbimpl
	basePkgDB dbimpl
}

func NewCommunityPkg(cfg *Config) repository.CommunityPkgImpl {
	return communityPkgImpl{
		appPkgDB:  postgres.NewDBTable(cfg.Table.ApplicationPkg),
		basePkgDB: postgres.NewDBTable(cfg.Table.BasePkg),
	}
}

func (c communityPkgImpl) AddApplicationPkg(app *domain.ApplicationPackage) error {
	res := c.toApplicationPkgDO(app)

	for i := range res {
		v := &res[i]

		if err := c.appPkgDB.Insert(v); err != nil {
			return err
		}
	}

	return nil
}

func (c communityPkgImpl) AddBasePkg(app *domain.BasePackage) error {
	var do basePkgDO
	c.toBasePkgDO(app, &do)

	return c.basePkgDB.Insert(&do)
}
