package main

import (
	"github.com/opensourceways/server-common-lib/utils"
	"github.com/robfig/cron/v3"

	"github.com/opensourceways/cve-manager/cve/domain/repository"
	"github.com/opensourceways/cve-manager/cve/infrastructure/repositoryimpl"
)

type task struct {
	cli         utils.HttpClient
	cfg         taskConfig
	cron        *cron.Cron
	base        repository.BasePkgRepository
	application repository.ApplicationPkgRepository
}

func newTask(cfg *taskConfig, table *repositoryimpl.Config) *task {
	return &task{
		cli:         utils.NewHttpClient(3),
		cfg:         *cfg,
		cron:        cron.New(),
		base:        repositoryimpl.NewBasePkg(table),
		application: repositoryimpl.NewApplicationPkg(table),
	}
}

func (t *task) Register() error {
	_, err := t.cron.AddFunc(t.cfg.Pkg.Exec, t.BasePkg)
	if err != nil {
		return err
	}
	_, err = t.cron.AddFunc(t.cfg.Pkg.Exec, t.ApplicationPkg)

	return err
}

func (t *task) Run() {
	t.cron.Run()
}

func (t *task) Stop() {
	t.cron.Stop()
}
